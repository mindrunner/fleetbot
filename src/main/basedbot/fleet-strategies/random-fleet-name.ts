import { Faction } from '../lib/util/galaxy-sectors-data.js'

const thematicWords = {
    [Faction.ONI]: [
        'Void',
        'Nebula',
        'Hive',
        'Swarm',
        'Essence',
        'Echo',
        'Tide',
        'Mindflow',
        'Overmind',
        'Symbiosis',
        'Dream',
        'Abyss',
        'Lumina',
        'Spectre',
        'Zenith',
        'Whisper',
        'Phantom',
        'Eclipse',
        'Nova',
        'Aurora',
        'Genesis',
        'Shadow',
        'Astral',
        'Spirit',
        'Ethereal',
        'Oblivion',
        'Enigma',
        'Entropy',
        'Mirage',
        'Seraph',
        'Wraith',
        'Eon',
        'Anomaly',
        'Singularity',
        'Stellar',
        'Nimbus',
        'Quasar',
        'Ephemeral',
        'Celestial',
        'Vortex',
        'Pulse',
        'Flux',
        'Oracle',
        'Prism',
        'Mystic',
        'Illusion',
        'Gloom',
        'Tempest',
        'Zephyr',
        'Arcana',
        'Chronicle',
        'Exodus',
        'Cascade',
        'Revenant',
        'Ascendant',
        'Echoes',
        'Paradox',
        'Conflux',
        'Veil',
        'Cosmos',
        'Eidolon',
        'Prophecy',
    ],
    [Faction.UST]: [
        'Alpha',
        'Delta',
        'Omega',
        'Quantum',
        'Vector',
        'Binary',
        'Circuit',
        'Prime',
        'Logic',
        'Matrix',
        'Nexus',
        'Protocol',
        'Directive',
        'Module',
        'Unit',
        'Core',
        'Cyber',
        'Terminal',
        'Pulse',
        'Vertex',
        'Array',
        'Grid',
        'Sector',
        'Drone',
        'Node',
        'Cipher',
        'Sigma',
        'Lambda',
        'Zeta',
        'Kappa',
        'Integral',
        'Algorithm',
        'Cluster',
        'Assembly',
        'Synthetic',
        'Axion',
        'Mechanus',
        'Cortex',
        'Vanguard',
        'Operator',
        'Daemon',
        'Sentinel',
        'Guardian',
        'Processor',
        'Initiative',
        'Stratum',
        'Relay',
        'Spectrum',
        'Fragment',
        'Macro',
        'Nanite',
        'Rho',
        'Helios',
        'Photon',
        'Zenith',
        'Dynasty',
        'Encryptor',
        'Simulacrum',
        'Bitstream',
        'Executor',
        'Comet',
        'Orion',
        'Atlas',
    ],
    [Faction.MUD]: [
        'Valiant',
        'Defiant',
        'Intrepid',
        'Dauntless',
        'Liberty',
        'Justice',
        'Crimson',
        'Guardian',
        'Sentinel',
        'Sovereign',
        'Vigilant',
        'Triumph',
        'Valor',
        'Resolute',
        'Odyssey',
        'Pioneer',
        'Legacy',
        'Endeavor',
        'Gladius',
        'Invictus',
        'Concord',
        'Atlas',
        'Falcon',
        'Bastion',
        'Courage',
        'Patriot',
        'Frontier',
        'Victory',
        'Ranger',
        'Emperor',
        'Admiral',
        'Conquest',
        'Spirit',
        'Alliance',
        'Champion',
        'Steadfast',
        'Liberty',
        'Dominion',
        'Protector',
        'Guardian',
        'Eagle',
        'Thunder',
        'Storm',
        'Tempest',
        'Aurora',
        'Voyager',
        'Heritage',
        'Honor',
        'Legend',
        'Gallant',
        'Command',
        'Fortress',
        'Phoenix',
        'Ascension',
        'Maverick',
        'Regent',
        'Navigator',
        'Mariner',
        'Saber',
        'Centurion',
        'Freedom',
        'Expedition',
        'Tribune',
    ],
}

export const getRandomFleetName = (
    chance: Chance.Chance,
    maxLen: number,
    faction: Faction,
    attempts = 0,
): string => {
    if (maxLen < 7)
        throw new Error('Maximum length must be at least 7 characters')

    const words = thematicWords[faction]

    const patterns = [
        () => `${chance.pickone(words)} ${chance.pickone(words)}`,
        () => `${chance.pickone(words)} of ${chance.pickone(words)}`,
        () => `The ${chance.pickone(words)}`,
        () =>
            `${chance.pickone(words)}-${chance.integer({ min: 1, max: 999 })}`,
    ]

    const name = chance.pickone(patterns)()

    if (name.length <= maxLen) return name
    if (attempts >= 100) return name.substring(0, maxLen)

    return getRandomFleetName(chance, maxLen, faction, attempts + 1)
}
